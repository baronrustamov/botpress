name: Tests
on: [pull_request]
jobs:
  # unit:
  #   name: Unit
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@master
  #     - name: Build
  #       run: |
  #         cp -r build/tests/* .
  #         docker-compose build
  #     - name: Run tests
  #       run: |
  #         docker-compose up --exit-code-from botpress

  e2e:
    name: e2e
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.2-alpine
        env:
          PGPORT: 5432
          POSTGRES_DB: bp
          POSTGRES_PASSWORD: pgsecret
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: '12.13.0'
      - name: Fetch Node Packages
        run: |
          yarn
      - name: Build core, UI and modules
        run: |
          NODE_OPTIONS="--max-old-space-size=6000" yarn cmd build:core
      # - name: Run Tests
      #   run: |
      #     yarn start & sleep 5s &&
      #     HEADLESS=true JEST_TIMEOUT=30000 yarn itest
      # - name: Upload Screenshots
      #   uses: actions/upload-artifact@master
      #   if: failure()
      #   with:
      #     name: screenshots
      #     path: build/tests/e2e/screenshots
      - name: Test Migrations
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DATABASE_URL: postgres://postgres:pgsecret@localhost:5432/bp
        run: |
          yarn add @actions/core aws-sdk
          node .github/workflows/code/test-migrations/index.js --verbose
